package FileShare;
/**
 *
 * @author Kerwan Miguel Antoine
 */
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import static java.nio.file.StandardCopyOption.COPY_ATTRIBUTES;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.sql.*;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import org.apache.commons.io.FilenameUtils;

public class BackUp_SelectAndShare extends javax.swing.JFrame { 

    static File sourceFile=null; //Used for Encryprion Method
    static String FileName; //Used for Editing File & Sharing
    
    public BackUp_SelectAndShare() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SecureShare");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, FileShare.BackUp_LoginWindow.welcome, javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        DefaultListModel model = new DefaultListModel();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection connect = DriverManager.getConnection("jdbc:mysql://sql9.freesqldatabase.com:3306/sql9201798", "sql9201798" ,"P@ssw0rd");
            String query = "Select * from Users";
            PreparedStatement pst = connect.prepareStatement(query);
            ResultSet results = pst.executeQuery();
            while (results.next()) {
                String dbusername = results.getString("Name");
                model.addElement(dbusername);
            }
        }
        catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        jList1.setModel(model

        );
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Select Users:");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Encrypt File");

        jFileChooser1.setApproveButtonText("Edit");
        jFileChooser1.setApproveButtonToolTipText("Edit File in File Manager");
        jFileChooser1.setCurrentDirectory(new java.io.File("/Users"));
        jFileChooser1.setDialogTitle("From:");
        jFileChooser1.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File file) {
                return file.isDirectory() || file.getName().endsWith(".txt"); //$NON-NLS-1$
            }

            @Override
            public String getDescription() {
                return "TXT files";
            }
        }
    );
    jFileChooser1.setFileFilter(new FileFilter() {
        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getName().endsWith(".docx"); //$NON-NLS-1$
        }

        @Override
        public String getDescription() {
            return "DOCX files";
        }
    });
    jFileChooser1.setFileFilter(new FileFilter() {
        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getName().endsWith(".pdf"); //$NON-NLS-1$
        }

        @Override
        public String getDescription() {
            return "PDF files";
        }
    });
    jFileChooser1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFileChooser1ActionPerformed(evt);
        }
    });

    jLabel2.setIcon(null);
    jLabel2.setBounds(new java.awt.Rectangle(0, 0, 358, 178));
    ImageIcon MyImage = new ImageIcon("resources/GSU_logo_header.png");
    Image img = MyImage.getImage();
    Image newImg = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
    jLabel2.setIcon(new ImageIcon(newImg));

    jButton1.setText("Share");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(49, 49, 49)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jCheckBox1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(209, 209, 209))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 69, Short.MAX_VALUE))
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(40, 40, 40))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(77, 77, 77)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox1)
                        .addComponent(jButton1)))
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(35, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    jPanel1.getAccessibleContext().setAccessibleName("");

    setBounds(0, 0, 1119, 638);
    }// </editor-fold>//GEN-END:initComponents

////// EDIT OPTION CODE /////////
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        if (evt.getActionCommand().equals(javax.swing.JFileChooser.APPROVE_SELECTION)) {
            FileName = jFileChooser1.getSelectedFile().getPath();
            sourceFile = jFileChooser1.getSelectedFile();
            FileInterface obj = new FileInterface();
            obj.buildInterface();
            obj.OpenFileToEdit(sourceFile,FileName);
        } 
        else if (evt.getActionCommand().equals(javax.swing.JFileChooser.CANCEL_SELECTION)) {
            dispose();
        }        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

////// SHARE OPTION CODE ////////
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*sourceFile = jFileChooser1.getSelectedFile();
        FileName = jFileChooser1.getSelectedFile().getPath();
        if (jList1.isSelectionEmpty()) // Check for no selection
            JOptionPane.showMessageDialog(rootPane, "Please select a user");
        else if (sourceFile==null)
             JOptionPane.showMessageDialog(rootPane, "Please select a file");   
        else {           
            if (jCheckBox1.isSelected()) {
                JPanel panel = new JPanel();
                JLabel label = new JLabel("Enter password to decrypt file:");
                JPasswordField pword = new JPasswordField(8);
                panel.add(label, pword);
                String[] options = new String[]{"OK", "Cancel"};
                int option = JOptionPane.showOptionDialog(null, panel, "The title", JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[1]);
                if (option == 0){
                    char[] password = pword.getPassword();
                    String pass = String.copyValueOf(password);
                    Crypto.Encrypt(pass);                  
                }               
                try {
                    File source = new File(Crypto.encryptedFile);
                    File dest = new File("/Users/Miguel/Desktop/test.encrypted");
                    Files.copy(source.toPath(), dest.toPath(), REPLACE_EXISTING);
                } catch (IOException ex) {
                    Logger.getLogger(BackUp_SelectAndShare.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else {
                try {
                    File source = new File(FileName);
                    String name = FilenameUtils.getName(FileName);
                    File dest = new File("/Users/Miguel/Desktop/" +name);
                    Files.copy(source.toPath(), dest.toPath(), REPLACE_EXISTING, COPY_ATTRIBUTES);
                } catch (IOException ex) {
                    Logger.getLogger(BackUp_SelectAndShare.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (JMAPI.isMapiSupported()) {
        Message msg = new Message();
        msg.setSubject("test!");
        msg.setBody("Hello world");

        List<String> toAddresses = new LinkedList<String>();
        toAddresses.add("example@example.com");
        msg.setToAddrs(toAddresses);

        List<String> attachPaths = new LinkedList<String>();
        //Must be absolute paths to file
        attachPaths.add("C:\Users\Documents\file.jpg");
        msg.setAttachments(attachPaths);

        JMAPI.open(msg);
    }



            JOptionPane.showMessageDialog(rootPane, "The file has been shared. A Message has been sent to " +  jList1.getSelectedValuesList());
            FileInterface obj = new FileInterface();
            obj.buildInterface();
            dispose();
            }*/
    }//GEN-LAST:event_jButton1ActionPerformed

    public void buildInterface() {
        initComponents();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackUp_SelectAndShare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BackUp_SelectAndShare().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
}
